<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="18" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="78319" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:34:41Z">
    <groups>
      <group name="functionaltest">
        <method signature="GroupsandPriorityTest.testMethod4()[pri:3, instance:tests.GroupsandPriorityTest@53b32d7]" name="testMethod4" class="tests.GroupsandPriorityTest"/>
        <method signature="GroupsandPriorityTest.testMethod5()[pri:2, instance:tests.GroupsandPriorityTest@53b32d7]" name="testMethod5" class="tests.GroupsandPriorityTest"/>
        <method signature="GroupsandPriorityTest.testMethod6()[pri:1, instance:tests.GroupsandPriorityTest@53b32d7]" name="testMethod6" class="tests.GroupsandPriorityTest"/>
      </group> <!-- functionaltest -->
      <group name="smoketest">
        <method signature="GroupsandPriorityTest.testMethod1()[pri:6, instance:tests.GroupsandPriorityTest@53b32d7]" name="testMethod1" class="tests.GroupsandPriorityTest"/>
        <method signature="GroupsandPriorityTest.testMethod2()[pri:5, instance:tests.GroupsandPriorityTest@53b32d7]" name="testMethod2" class="tests.GroupsandPriorityTest"/>
        <method signature="GroupsandPriorityTest.testMethod3()[pri:4, instance:tests.GroupsandPriorityTest@53b32d7]" name="testMethod3" class="tests.GroupsandPriorityTest"/>
      </group> <!-- smoketest -->
    </groups>
    <test name="Default test" duration-ms="78319" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:34:41Z">
      <class name="tests.CrossBrowserTest">
        <test-method status="PASS" signature="setup(java.lang.String)[pri:0, instance:tests.CrossBrowserTest@5442a311]" name="setup" is-config="true" duration-ms="1" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[param-val-not-found]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="CrossBrowserTestMethod()[pri:0, instance:tests.CrossBrowserTest@5442a311]" name="CrossBrowserTestMethod" duration-ms="5" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at tests.CrossBrowserTest.CrossBrowserTestMethod(CrossBrowserTest.java:41)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CrossBrowserTestMethod -->
        <test-method status="FAIL" signature="TearDown()[pri:0, instance:tests.CrossBrowserTest@5442a311]" name="TearDown" is-config="true" duration-ms="0" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at tests.CrossBrowserTest.TearDown(CrossBrowserTest.java:50)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- tests.CrossBrowserTest -->
      <class name="tests.TestNGAnnotations">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="beforeSuite" is-config="true" duration-ms="12" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testcase1()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="testcase1" duration-ms="2" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testcase2()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="testcase2" duration-ms="1" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="afterClass" is-config="true" duration-ms="1" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="afterSuite" is-config="true" duration-ms="0" started-at="2020-02-18T04:34:41Z" finished-at="2020-02-18T04:34:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.TestNGAnnotations -->
      <class name="tests.DataProviderTest">
        <test-method status="PASS" signature="dataProviderTestMethod(java.lang.String, java.lang.String)[pri:0, instance:tests.DataProviderTest@548e7350]" name="dataProviderTestMethod" duration-ms="2" started-at="2020-02-18T04:33:23Z" data-provider="getData" finished-at="2020-02-18T04:33:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserName1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataProviderTestMethod -->
        <test-method status="PASS" signature="dataProviderTestMethod(java.lang.String, java.lang.String)[pri:0, instance:tests.DataProviderTest@548e7350]" name="dataProviderTestMethod" duration-ms="2" started-at="2020-02-18T04:33:23Z" data-provider="getData" finished-at="2020-02-18T04:33:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserName2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataProviderTestMethod -->
      </class> <!-- tests.DataProviderTest -->
      <class name="tests.ParallelTest">
        <test-method status="PASS" signature="testMethod1()[pri:0, instance:tests.ParallelTest@1a968a59]" name="testMethod1" duration-ms="7278" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method status="PASS" signature="testMethod2()[pri:0, instance:tests.ParallelTest@1a968a59]" name="testMethod2" duration-ms="7387" started-at="2020-02-18T04:33:30Z" finished-at="2020-02-18T04:33:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method status="PASS" signature="testMethod3()[pri:0, instance:tests.ParallelTest@1a968a59]" name="testMethod3" duration-ms="6984" started-at="2020-02-18T04:33:38Z" finished-at="2020-02-18T04:33:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method status="PASS" signature="testMethod4()[pri:0, instance:tests.ParallelTest@1a968a59]" name="testMethod4" duration-ms="7027" started-at="2020-02-18T04:33:45Z" finished-at="2020-02-18T04:33:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method status="PASS" signature="testMethod5()[pri:0, instance:tests.ParallelTest@1a968a59]" name="testMethod5" duration-ms="7028" started-at="2020-02-18T04:33:52Z" finished-at="2020-02-18T04:33:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod5 -->
      </class> <!-- tests.ParallelTest -->
      <class name="tests.ExcelRWTest">
        <test-method status="PASS" signature="ReadExcel()[pri:0, instance:tests.ExcelRWTest@4667ae56]" name="ReadExcel" duration-ms="662" started-at="2020-02-18T04:33:59Z" finished-at="2020-02-18T04:33:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReadExcel -->
        <test-method status="PASS" signature="WriteExcel()[pri:0, instance:tests.ExcelRWTest@4667ae56]" name="WriteExcel" duration-ms="185" started-at="2020-02-18T04:33:59Z" finished-at="2020-02-18T04:34:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WriteExcel -->
      </class> <!-- tests.ExcelRWTest -->
      <class name="tests.ExtentReport">
        <test-method status="PASS" signature="startReport()[pri:0, instance:tests.ExtentReport@343f4d3d]" name="startReport" is-config="true" duration-ms="116" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-02-18T04:33:23Z" finished-at="2020-02-18T04:33:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testMethod1()[pri:0, instance:tests.ExtentReport@343f4d3d]" name="testMethod1" duration-ms="7022" started-at="2020-02-18T04:34:00Z" finished-at="2020-02-18T04:34:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.ExtentReport@343f4d3d]" name="getResult" is-config="true" duration-ms="3" started-at="2020-02-18T04:34:07Z" finished-at="2020-02-18T04:34:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod1 status=SUCCESS method=ExtentReport.testMethod1()[pri:0, instance:tests.ExtentReport@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testMethod2()[pri:0, instance:tests.ExtentReport@343f4d3d]" name="testMethod2" duration-ms="7637" started-at="2020-02-18T04:34:07Z" finished-at="2020-02-18T04:34:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.ExtentReport@343f4d3d]" name="getResult" is-config="true" duration-ms="0" started-at="2020-02-18T04:34:14Z" finished-at="2020-02-18T04:34:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod2 status=SUCCESS method=ExtentReport.testMethod2()[pri:0, instance:tests.ExtentReport@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testMethod3()[pri:0, instance:tests.ExtentReport@343f4d3d]" name="testMethod3" duration-ms="8722" started-at="2020-02-18T04:34:14Z" finished-at="2020-02-18T04:34:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.ExtentReport@343f4d3d]" name="getResult" is-config="true" duration-ms="1" started-at="2020-02-18T04:34:23Z" finished-at="2020-02-18T04:34:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod3 status=SUCCESS method=ExtentReport.testMethod3()[pri:0, instance:tests.ExtentReport@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testMethod4()[pri:0, instance:tests.ExtentReport@343f4d3d]" name="testMethod4" duration-ms="5218" started-at="2020-02-18T04:34:23Z" finished-at="2020-02-18T04:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.ExtentReport@343f4d3d]" name="getResult" is-config="true" duration-ms="1" started-at="2020-02-18T04:34:28Z" finished-at="2020-02-18T04:34:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod4 status=SUCCESS method=ExtentReport.testMethod4()[pri:0, instance:tests.ExtentReport@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testMethod5()[pri:0, instance:tests.ExtentReport@343f4d3d]" name="testMethod5" duration-ms="7940" started-at="2020-02-18T04:34:28Z" finished-at="2020-02-18T04:34:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod5 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.ExtentReport@343f4d3d]" name="getResult" is-config="true" duration-ms="1" started-at="2020-02-18T04:34:36Z" finished-at="2020-02-18T04:34:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod5 status=SUCCESS method=ExtentReport.testMethod5()[pri:0, instance:tests.ExtentReport@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="testMethod6()[pri:0, instance:tests.ExtentReport@343f4d3d]" name="testMethod6" duration-ms="5000" started-at="2020-02-18T04:34:36Z" finished-at="2020-02-18T04:34:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at tests.ExtentReport.testMethod6(ExtentReport.java:109)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod6 -->
        <test-method status="FAIL" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.ExtentReport@343f4d3d]" name="getResult" is-config="true" duration-ms="1" started-at="2020-02-18T04:34:41Z" finished-at="2020-02-18T04:34:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod6 status=FAILURE method=ExtentReport.testMethod6()[pri:0, instance:tests.ExtentReport@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at tests.ExtentReport.getResult(ExtentReport.java:116)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="endReport()[pri:0, instance:tests.ExtentReport@343f4d3d]" name="endReport" is-config="true" duration-ms="0" started-at="2020-02-18T04:34:41Z" finished-at="2020-02-18T04:34:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:tests.TestNGAnnotations@57baeedf]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-02-18T04:34:41Z" finished-at="2020-02-18T04:34:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.ExtentReport -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
