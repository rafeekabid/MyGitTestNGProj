<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="10" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="38035" started-at="2020-02-17T05:09:02Z" finished-at="2020-02-17T05:09:40Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="38035" started-at="2020-02-17T05:09:02Z" finished-at="2020-02-17T05:09:40Z">
      <class name="tests.CrossBrowserTest">
        <test-method status="FAIL" signature="setup(java.lang.String)[pri:0, instance:tests.CrossBrowserTest@783e6358]" name="setup" is-config="true" duration-ms="0" started-at="2020-02-17T05:09:02Z" finished-at="2020-02-17T05:09:02Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'browser' is required by BeforeMethod on method setup but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeMethod on method setup but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TearDown()[pri:0, instance:tests.CrossBrowserTest@783e6358]" name="TearDown" is-config="true" duration-ms="0" started-at="2020-02-17T05:09:02Z" finished-at="2020-02-17T05:09:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="SKIP" signature="CrossBrowserTestMethod()[pri:0, instance:tests.CrossBrowserTest@783e6358]" name="CrossBrowserTestMethod" duration-ms="0" started-at="2020-02-17T05:09:02Z" finished-at="2020-02-17T05:09:02Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'browser' is required by BeforeMethod on method setup but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeMethod on method setup but has not been marked @Optional or defined

at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CrossBrowserTestMethod -->
      </class> <!-- tests.CrossBrowserTest -->
      <class name="tests.TestNGAnnotations">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="beforeSuite" is-config="true" duration-ms="13" started-at="2020-02-17T05:09:02Z" finished-at="2020-02-17T05:09:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-02-17T05:09:02Z" finished-at="2020-02-17T05:09:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-17T05:09:40Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-02-17T05:09:40Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testcase1()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="testcase1" duration-ms="0" started-at="2020-02-17T05:09:40Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-02-17T05:09:40Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-02-17T05:09:40Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="testcase2()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="testcase2" duration-ms="0" started-at="2020-02-17T05:09:40Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-02-17T05:09:40Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-02-17T05:09:40Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-02-17T05:09:40Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:tests.TestNGAnnotations@4e04a765]" name="afterSuite" is-config="true" duration-ms="0" started-at="2020-02-17T05:09:40Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.TestNGAnnotations -->
      <class name="tests.DataProviderTest">
        <test-method status="PASS" signature="dataProviderTestMethod(java.lang.String, java.lang.String)[pri:0, instance:tests.DataProviderTest@17550481]" name="dataProviderTestMethod" duration-ms="0" started-at="2020-02-17T05:09:40Z" data-provider="getData" finished-at="2020-02-17T05:09:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserName2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataProviderTestMethod -->
        <test-method status="PASS" signature="dataProviderTestMethod(java.lang.String, java.lang.String)[pri:0, instance:tests.DataProviderTest@17550481]" name="dataProviderTestMethod" duration-ms="0" started-at="2020-02-17T05:09:40Z" data-provider="getData" finished-at="2020-02-17T05:09:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[UserName1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataProviderTestMethod -->
      </class> <!-- tests.DataProviderTest -->
      <class name="tests.ParallelTest">
        <test-method status="PASS" signature="testMethod1()[pri:0, instance:tests.ParallelTest@735f7ae5]" name="testMethod1" duration-ms="8397" started-at="2020-02-17T05:09:02Z" finished-at="2020-02-17T05:09:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method status="PASS" signature="testMethod2()[pri:0, instance:tests.ParallelTest@735f7ae5]" name="testMethod2" duration-ms="7511" started-at="2020-02-17T05:09:10Z" finished-at="2020-02-17T05:09:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method status="PASS" signature="testMethod3()[pri:0, instance:tests.ParallelTest@735f7ae5]" name="testMethod3" duration-ms="7629" started-at="2020-02-17T05:09:18Z" finished-at="2020-02-17T05:09:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method status="PASS" signature="testMethod4()[pri:0, instance:tests.ParallelTest@735f7ae5]" name="testMethod4" duration-ms="7372" started-at="2020-02-17T05:09:25Z" finished-at="2020-02-17T05:09:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod4 -->
        <test-method status="PASS" signature="testMethod5()[pri:0, instance:tests.ParallelTest@735f7ae5]" name="testMethod5" duration-ms="7087" started-at="2020-02-17T05:09:33Z" finished-at="2020-02-17T05:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod5 -->
      </class> <!-- tests.ParallelTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
